---
name: "CI/CD - Test and Release"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed

env:
  NPM_MODULE_NAME: "@0xmail/indexer_client"

jobs:
  test:
    name: "Run Tests"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - "20.x"
          - "22.x"
    steps:
      - uses: actions/checkout@v4

      - name: "Use Node.js ${{ matrix.node }}"
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          registry-url: "https://registry.npmjs.org"

      - name: "Setup .npmrc for restricted packages"
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          echo "@sudobility:registry=https://registry.npmjs.org/" >> .npmrc
          echo "@0xmail:registry=https://registry.npmjs.org/" >> .npmrc

      - name: "Install dependencies"
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: "Run type checking"
        run: npm run typecheck

      - name: "Run linting"
        run: npm run lint

      - name: "Run unit tests"
        run: npm run test:run

      - name: "Build project"
        run: npm run build

  check_for_release:
    runs-on: ubuntu-latest
    outputs:
      should_release: ${{ steps.check.outputs.should_release }}
      version: ${{ steps.check.outputs.version }}
      version_tag: ${{ steps.check.outputs.version_tag }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Check if should trigger release"
        id: check
        run: |
          # Skip only if explicitly marked with [skip ci] or [skip-ci]
          COMMIT_MSG=$(git log -1 --pretty=%s)
          echo "Commit message: $COMMIT_MSG"

          # Skip release only for PR events that weren't merged
          if [[ "${{ github.event_name }}" == "pull_request" ]] && [[ "${{ github.event.action }}" != "closed" || "${{ github.event.pull_request.merged }}" != "true" ]]; then
            echo "should_release=false" >> $GITHUB_OUTPUT
            echo "PR not merged, skipping release"
            exit 0
          fi

          # Skip only if explicitly marked to skip CI
          if [[ "$COMMIT_MSG" == *"[skip ci]"* ]] || [[ "$COMMIT_MSG" == *"[skip-ci]"* ]]; then
            echo "should_release=false" >> $GITHUB_OUTPUT
            echo "Commit marked to skip CI: $COMMIT_MSG"
          else
            echo "should_release=true" >> $GITHUB_OUTPUT

            # Get current version from package.json
            CURRENT_VERSION=$(node -p "require('./package.json').version")

            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "version_tag=v$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "Will release version: $CURRENT_VERSION for commit: $COMMIT_MSG"
          fi

  release_npm:
    needs:
      - test
      - check_for_release
    if: ${{ needs.check_for_release.outputs.should_release == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: "Setup .npmrc for restricted packages"
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          echo "@sudobility:registry=https://registry.npmjs.org/" >> .npmrc
          echo "@0xmail:registry=https://registry.npmjs.org/" >> .npmrc

      - name: "Verify package version"
        run: |
          echo "Using version: ${{ needs.check_for_release.outputs.version }}"
          echo "Package.json version: $(node -p "require('./package.json').version")"

      - name: "Install dependencies"
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: "Run tests with coverage"
        run: npm run test:coverage

      - name: "Build project"
        run: npm run build

      - name: "Verify build output"
        run: |
          echo "Build output contents:"
          ls -la dist/
          echo "Main export file:"
          head -10 dist/index.js
          echo "Type definitions:"
          head -10 dist/index.d.ts

      - name: "Create GitHub Release"
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.check_for_release.outputs.version_tag }}
          name: "Release ${{ needs.check_for_release.outputs.version }}"
          body: |
            ## 0xMail Indexer Client v${{ needs.check_for_release.outputs.version }}

            TypeScript client library for the 0xMail Indexer API. Compatible with React and React Native applications.

            ### Features
            - ‚úÖ Complete Type Safety - Full TypeScript support with @sudobility/types
            - ‚úÖ React Integration - Built-in hooks using @tanstack/react-query
            - ‚úÖ Multi-Chain Support - EVM and Solana blockchains
            - ‚úÖ Authentication - SIWE/SIWS signature verification
            - ‚úÖ Points System - Track and display user points
            - ‚úÖ Referral System - Generate and track referral codes
            - ‚úÖ Name Service - ENS and SNS resolution
            - ‚úÖ Delegation - Wallet delegation management
            - ‚úÖ Development Mode - Mock data for testing

            ### Installation
            ```bash
            npm install @0xmail/indexer_client@${{ needs.check_for_release.outputs.version }}
            ```

            ### Peer Dependencies
            ```bash
            npm install react @tanstack/react-query axios @sudobility/di @sudobility/types
            ```

            ### Quick Start
            ```typescript
            import { useIndexerPoints } from '@0xmail/indexer_client';

            function PointsDisplay() {
              const { getPointsLeaderboard } = useIndexerPoints('https://indexer.0xmail.box');
              // Use the hook to fetch data
            }
            ```

            ### API Coverage
            - Mail & User Management: ‚úÖ 71% (12/17 endpoints)
            - Points System: ‚úÖ 100% (3/3 endpoints)
            - Referral System: ‚úÖ 100% (Fully implemented)
            - OAuth 2.0: ‚ùå Planned for v1.0

            ### Documentation
            - [API Documentation](https://github.com/${{ github.repository }}/blob/main/API.md)
            - [Examples](https://github.com/${{ github.repository }}/blob/main/EXAMPLES.md)
            - [AI Development Guide](https://github.com/${{ github.repository }}/blob/main/AI_DEVELOPMENT_GUIDE.md)
            - [Coverage Status](https://github.com/${{ github.repository }}/blob/main/COVERAGE.md)

            ### What's New
            See the auto-generated release notes below for detailed changes.
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Publish to NPM"
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: "Notify deployment success"
        if: success()
        run: |
          echo "üöÄ Release ${{ needs.check_for_release.outputs.version }} deployed successfully!"
          echo "‚Ä¢ NPM: https://www.npmjs.com/package/@0xmail/indexer_client/v/${{ needs.check_for_release.outputs.version }}"
          echo "‚Ä¢ GitHub: https://github.com/${{ github.repository }}/releases/tag/${{ needs.check_for_release.outputs.version_tag }}"
          echo "‚Ä¢ Documentation: https://github.com/${{ github.repository }}#readme"

      - name: "Notify deployment failure"
        if: failure()
        run: |
          echo "‚ùå Release deployment FAILED for commit ${{ github.sha }}"
          echo "Check: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
